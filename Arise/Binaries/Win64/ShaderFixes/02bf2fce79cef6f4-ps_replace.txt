// ---- Created with 3Dmigoto v1.3.16 on Thu Dec 22 20:32:24 2022
TextureCube<float4> t10 : register(t10);

Texture2D<float4> t9 : register(t9);

Texture2D<float4> t8 : register(t8);

Texture2D<float4> t7 : register(t7);

Texture2D<float4> t6 : register(t6);

Texture2D<float4> t5 : register(t5);

Texture2D<float4> t4 : register(t4);

Texture2D<float4> t3 : register(t3);

Texture2D<float4> t2 : register(t2);

Texture2D<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s10_s : register(s10);

SamplerState s9_s : register(s9);

SamplerState s8_s : register(s8);

SamplerState s7_s : register(s7);

SamplerState s6_s : register(s6);

SamplerState s5_s : register(s5);

SamplerState s4_s : register(s4);

SamplerState s3_s : register(s3);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb5 : register(b5)
{
  float4 cb5[59];
}

cbuffer cb4 : register(b4)
{
  float4 cb4[1];
}

cbuffer cb3 : register(b3)
{
  float4 cb3[6];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[12];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[163];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[37];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  linear centroid float4 v0 : TEXCOORD10,
  linear centroid float4 v1 : TEXCOORD11,
  float4 v2 : COLOR0,
  float4 v3 : TEXCOORD0,
  float2 v4 : TEXCOORD1,
  float4 v5 : SV_Position0,
  uint v6 : SV_IsFrontFace0,
  out float4 o0 : SV_Target0,
  out float4 o1 : SV_Target1,
  out float4 o2 : SV_Target2,
  out float4 o3 : SV_Target3,
  out float4 o4 : SV_Target4,
  out float4 o5 : SV_Target5,
  out float4 o6 : SV_Target6)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyz = v1.zxy * v0.yzx;
  r0.xyz = v1.yzx * v0.zxy + -r0.xyz;
  r0.xyz = v1.www * r0.xyz;
  r1.xyzw = cb1[41].xyzw * v5.yyyy;
  r1.xyzw = v5.xxxx * cb1[40].xyzw + r1.xyzw;
  r1.xyzw = v5.zzzz * cb1[42].xyzw + r1.xyzw;
  r1.xyzw = cb1[43].xyzw + r1.xyzw;
  r1.xyz = r1.xyz / r1.www;
  r2.xyz = -cb1[62].xyz + r1.xyz;
  r0.w = dot(-r1.xyz, -r1.xyz);
  r0.w = rsqrt(r0.w);
  r1.xyz = -r1.xyz * r0.www;
  r3.xy = float2(-0.5,-0.5) + v3.xy;
  r4.x = dot(cb5[1].xy, r3.xy);
  r4.y = dot(cb5[2].xy, r3.xy);
  r3.xy = float2(0.5,0.5) + r4.xy;
  r3.xy = cb5[3].xy * r3.xy;
  r3.zw = t0.SampleBias(s0_s, r3.xy, cb1[133].x).xy;
  r4.xy = r3.zw * float2(2,2) + float2(-1,-1);
  r0.w = dot(r4.xy, r4.xy);
  r0.w = 1 + -r0.w;
  r0.w = max(0, r0.w);
  r4.z = sqrt(r0.w);
  r3.zw = t1.SampleBias(s1_s, v4.xy, cb1[133].x).xy;
  r5.xy = r3.zw * float2(2,2) + float2(-1,-1);
  r0.w = dot(r5.xy, r5.xy);
  r0.w = 1 + -r0.w;
  r0.w = max(0, r0.w);
  r5.z = sqrt(r0.w);
  r6.xyzw = t2.SampleBias(s2_s, v4.xy, cb1[133].x).xyzw;
  r0.w = cb5[41].w * r6.w;
  r5.xyz = r5.xyz + -r4.xyz;
  r4.xyz = r0.www * r5.xyz + r4.xyz;
  r4.xyz = r4.xyz * cb1[128].www + cb1[128].xyz;
  r1.w = dot(r4.xyz, r4.xyz);
  r1.w = rsqrt(r1.w);
  r4.xyz = r4.xyz * r1.www;
  r0.xyz = r4.yyy * r0.xyz;
  r0.xyz = r4.xxx * v0.xyz + r0.xyz;
  r0.xyz = r4.zzz * v1.xyz + r0.xyz;
  r1.w = dot(r0.xyz, r0.xyz);
  r1.w = rsqrt(r1.w);
  r4.xyz = r1.www * r0.xyz;
  r0.xy = -cb1[121].xy + v5.xy;
  r5.x = 0;
  r5.y = 0.0199999996 * cb1[132].z;
  r3.zw = r0.xy * cb1[122].zw + r5.xy;
  r5.xyz = t3.SampleBias(s3_s, r3.zw, cb1[133].x).xyz;
  r5.xyz = float3(-0.5,-0.5,-0.5) + r5.xyz;
  r5.xyz = saturate(cb5[42].xxx * r5.xyz + float3(0.5,0.5,0.5));
  r7.xyz = float3(1,1,1) + -r5.xyz;
  r7.xyz = -cb5[8].xyz * r7.xyz + float3(1,1,1);
  r5.xyz = cb5[9].xyz * r5.xyz;
  r8.xyz = cmp(cb5[42].yzw >= float3(0.5,0.5,0.5));
  r5.xyz = r8.xyz ? r7.xyz : r5.xyz;
  r0.z = cb5[43].x * cb1[132].z;
  r0.z = 6.28318548 * r0.z;
  r0.z = sin(r0.z);
  r0.z = 1 + r0.z;
  r0.z = 0.5 * r0.z;
  r1.w = cb5[43].y * r0.z;
  r5.xyz = r5.xyz * r1.www;
  r1.x = dot(r4.xyz, r1.xyz);
  r1.x = max(0, r1.x);
  r1.x = 1 + -r1.x;
  r1.x = log2(abs(r1.x));
  r1.y = cb5[43].z * r1.x;
  r1.y = exp2(r1.y);
  r1.y = r1.y * cb5[44].x + cb5[43].w;
  r1.yzw = r5.xyz * r1.yyy;
  r1.yzw = cb5[44].yyy * r1.yzw;
  r5.xyz = float3(-1,-1,-1) + cb3[5].xyz;
  r5.xyz = cb5[44].zzz * r5.xyz + float3(1,1,1);
  r5.xyz = saturate(cb5[11].xyz * r5.xyz);
  r5.xyz = cb5[44].www * r5.xyz;
  r2.w = dot(cb5[13].xyz, r4.xyz);
  r2.w = max(0, r2.w);
  r2.w = log2(r2.w);
  r2.w = cb5[45].w * r2.w;
  r2.w = exp2(r2.w);
  r2.w = min(1, r2.w);
  r5.xyz = r5.xyz * r2.www;
  r0.xy = r0.xy * cb1[122].zw + -cb5[14].xy;
  r0.x = dot(r0.xy, r0.xy);
  r0.x = sqrt(r0.x);
  r0.x = r0.x / cb5[46].z;
  r0.x = 1 + -r0.x;
  r0.y = cb5[46].w * r0.x;
  r0.y = r0.y * r0.y;
  r0.y = 1.44269514 * r0.y;
  r0.y = exp2(r0.y);
  r0.y = 1 / r0.y;
  r2.w = cmp(9.99999975e-006 < abs(r0.x));
  r0.x = cmp(r0.x >= 0);
  r0.y = 1 + -r0.y;
  r5.xyz = r5.xyz * r0.yyy;
  r5.xyz = cb5[47].xxx * r5.xyz;
  r5.xyz = r0.xxx ? r5.xyz : 0;
  r5.xyz = r2.www ? r5.xyz : 0;
  r0.x = cb5[48].z + cb1[132].z;
  r0.x = 3.14159274 * r0.x;
  r0.x = sin(r0.x);
  r0.x = 1 + r0.x;
  r0.x = saturate(r0.x * 0.5 + cb5[48].w);
  r0.y = 1.60000002 * r1.x;
  r0.y = exp2(r0.y);
  r0.y = r0.y * 0.959999979 + 0.0399999991;
  r7.xyz = cb5[18].xyz * r0.yyy;
  r7.xyz = r7.xyz * r0.xxx;
  r7.xyz = cb5[49].yyy * r7.xyz;
  r8.xyz = t4.SampleBias(s4_s, r3.xy, cb1[133].x).xyz;
  r9.xyz = cb5[20].xyz * r8.xyz;
  r10.xyz = cb5[22].xyz * r9.xyz;
  r10.xyz = cb5[49].zzz * r10.xyz;
  r0.y = t5.SampleBias(s5_s, v4.xy, cb1[133].x).x;
  r0.y = r6.w * r0.y;
  r11.xyz = r6.xyz * r0.yyy;
  r11.xyz = cb5[24].xyz * r11.xyz;
  r11.xyz = r11.xyz * cb5[49].www + -r10.xyz;
  r10.xyz = r0.www * r11.xyz + r10.xyz;
  r7.xyz = max(r10.xyz, r7.xyz);
  r7.xyz = cb5[25].xyz + r7.xyz;
  r5.xyz = max(r7.xyz, r5.xyz);
  r1.xyz = max(r5.xyz, r1.yzw);
  r1.xyz = cb5[26].xyz + r1.xyz;
  r5.xyz = -r8.xyz * cb5[20].xyz + r6.xyz;
  r5.xyz = r0.www * r5.xyz + r9.xyz;
  r6.xyz = r5.xyz * r0.xxx;
  r6.xyz = cb5[49].yyy * r6.xyz;
  r5.xyz = r6.xyz * float3(-0.399999976,-0.399999976,-0.399999976) + r5.xyz;
  r6.xyz = cb5[50].www * r5.xyz;
  r5.xyz = -cb5[50].www * r5.xyz + cb5[28].xyz;
  r5.xyz = cb5[51].xxx * r5.xyz + r6.xyz;
  r5.xyz = cb5[31].xyz * r5.xyz;
  r0.xyz = r5.xyz * r0.zzz;
  r0.xyz = cb5[44].yyy * r0.xyz;
  r5.xyz = saturate(r0.xyz * float3(-0.399999976,-0.399999976,-0.399999976) + r5.xyz);
  r0.x = -cb5[52].x + cb5[51].w;
  r0.x = saturate(r0.w * r0.x + cb5[52].x);
  r0.y = cb5[52].z + -cb5[52].w;
  r0.y = saturate(r0.w * r0.y + cb5[52].w);
  r6.xyz = t6.SampleBias(s6_s, r3.xy, cb1[133].x).xyz;
  r6.xyz = max(float3(0,0,0), r6.xyz);
  r6.xyz = log2(r6.xyz);
  r6.xyz = cb5[56].www * r6.xyz;
  r6.xyz = exp2(r6.xyz);
  r7.xyz = cb5[33].xyz * r6.xyz;
  r8.xyz = t7.SampleBias(s7_s, v4.xy, cb1[133].x).xyz;
  r6.xyz = -r6.xyz * cb5[33].xyz + r8.xyz;
  r6.xyz = r0.www * r6.xyz + r7.xyz;
  r7.xyz = cb5[28].xyz + -r6.xyz;
  r6.xyz = cb5[51].xxx * r7.xyz + r6.xyz;
  o4.xyz = saturate(cb5[31].xyz * r6.xyz);
  r0.z = t8.SampleBias(s8_s, r3.xy, cb1[133].x).x;
  r0.z = max(0, r0.z);
  r0.z = log2(r0.z);
  r0.z = cb5[57].z * r0.z;
  r0.z = exp2(r0.z);
  r1.w = cb5[57].w * r0.z;
  r2.w = t9.SampleBias(s9_s, v4.xy, cb1[133].x).x;
  r0.z = -r0.z * cb5[57].w + r2.w;
  r5.w = saturate(r0.w * r0.z + r1.w);
  r0.z = -cb5[39].x + cb5[38].x;
  o2.x = r0.w * r0.z + cb5[39].x;
  o2.z = r0.y * cb1[129].y + cb1[129].x;
  r0.y = (uint)cb5[34].x;
  r0.y = (uint)r0.y;
  r0.y = 0.5 + r0.y;
  o4.w = 0.142857149 * r0.y;
  r0.yzw = -cb1[59].xyz + r2.xyz;
  r0.y = dot(r0.yzw, r0.yzw);
  r0.y = sqrt(r0.y);
  r0.y = -cb4[0].x + r0.y;
  r0.z = cb4[0].y + -cb4[0].x;
  r0.y = saturate(r0.y / r0.z);
  r0.z = -1 + cb4[0].z;
  r0.y = r0.y * r0.z + 1;
  o5.w = cb5[58].w * r0.y;
  r0.y = cb1[127].w * r0.x;
  r3.xyz = r5.xyz * cb1[126].www + cb1[126].xyz;
  r0.yzw = r0.yyy * float3(0.0799999982,0.0799999982,0.0799999982) + cb1[127].xyz;
  r6.xy = cmp(float2(0,0) < cb0[29].xy);
  r1.w = dot(float3(0.300000012,0.400000006,0.300000012), cb1[155].xyz);
  r2.w = max(cb0[36].y, r1.w);
  r1.w = 9.99999975e-005 + r1.w;
  r1.w = r2.w / r1.w;
  r7.xyz = cb1[155].xyz * r1.www + -r2.www;
  r7.xyz = cb0[36].xxx * r7.xyz + r2.www;
  r4.w = 1;
  r8.x = dot(cb1[156].xyzw, r4.xyzw);
  r8.y = dot(cb1[157].xyzw, r4.xyzw);
  r8.z = dot(cb1[158].xyzw, r4.xyzw);
  r9.xyzw = r4.xyzz * r4.yzzx;
  r10.x = dot(cb1[159].xyzw, r9.xyzw);
  r10.y = dot(cb1[160].xyzw, r9.xyzw);
  r10.z = dot(cb1[161].xyzw, r9.xyzw);
  r1.w = r4.y * r4.y;
  r1.w = r4.x * r4.x + -r1.w;
  r8.xyz = r10.xyz + r8.xyz;
  r8.xyz = cb1[162].xyz * r1.www + r8.xyz;
  r8.xyz = max(float3(0,0,0), r8.xyz);
  r8.xyz = r8.xyz * r7.xyz;
  r9.xyzw = float4(-1,-1,-1,1) * r4.xyzw;
  r11.x = dot(cb1[156].xyzw, r9.xyzw);
  r11.y = dot(cb1[157].xyzw, r9.xyzw);
  r11.z = dot(cb1[158].xyzw, r9.xyzw);
  r9.xyz = r11.xyz + r10.xyz;
  r9.xyz = cb1[162].xyz * r1.www + r9.xyz;
  r9.xyz = max(float3(0,0,0), r9.xyz);
  r7.xyz = r9.xyz * r7.xyz;
  r7.xyz = r7.xyz * r5.www + r8.xyz;
  r7.xyz = cb0[29].xxx * r7.xyz;
  r1.w = dot(float3(0.200000003,0.699999988,0.100000001), r5.xyz);
  r2.w = saturate(0.0666666701 * cb0[28].w);
  r2.w = r2.w * -9 + 10;
  r3.w = 1 + -r2.w;
  r1.w = r1.w * r3.w + r2.w;
  r7.xyz = r1.www * r7.xyz;
  r7.xyz = r6.xxx ? r7.xyz : 0;
  r6.xzw = r6.xxx ? r8.xyz : 0;
  if (r6.y != 0) {
    r8.xyz = t10.Sample(s10_s, r4.xyz).xyz;
    r8.xyz = cb0[29].yyy * r8.xyz;
    r7.xyz = r8.xyz * r3.xyz + r7.xyz;
  }
  r6.xyz = r6.xzw * r3.xyz;
  r0.yzw = r0.yzw * float3(0.449999988,0.449999988,0.449999988) + r3.xyz;
  r0.yzw = r0.yzw + -r7.xyz;
  r0.yzw = cb1[134].zzz * r0.yzw + r7.xyz;
  r1.xyz = max(float3(0,0,0), r1.xyz);
  r1.w = cmp(0 < cb1[130].x);
  if (r1.w != 0) {
    r3.xyz = -cb2[8].xyz + r2.xyz;
    r7.xyz = float3(1,1,1) + cb2[9].xyz;
    r3.xyz = cmp(r7.xyz < abs(r3.xyz));
    r1.w = (int)r3.y | (int)r3.x;
    r1.w = (int)r3.z | (int)r1.w;
    r2.x = dot(r2.xyz, float3(0.577000022,0.577000022,0.577000022));
    r2.x = 0.00200000009 * r2.x;
    r2.x = frac(r2.x);
    r2.x = cmp(0.5 < r2.x);
    r2.xyz = r2.xxx ? float3(0,1,1) : float3(1,1,0);
    r1.xyz = r1.www ? r2.xyz : r1.xyz;
  }
  o0.xyz = r6.xyz * r5.www + r0.yzw;
  o1.xyz = r4.xyz * float3(0.5,0.5,0.5) + float3(0.5,0.5,0.5);
  o0.w = 0;
  o1.w = cb2[11].x;
  o2.w = 0.552941203;
  o2.y = r0.x;
  o3.xyzw = r5.xyzw;
  o5.xyz = float3(0,0.552941203,1);
  o6.xyz = r1.xyz;
  o6.w = 0;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Dec 22 20:32:24 2022
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// COLOR                    0   xyzw        2     NONE   float
// TEXCOORD                 0   xy          3     NONE   float   xy
// TEXCOORD                 1   xy          4     NONE   float   xy
// SV_Position              0   xyzw        5      POS   float   xyz
// SV_IsFrontFace           0   x           6    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
// SV_Target                5   xyzw        5   TARGET   float   xyzw
// SV_Target                6   xyzw        6   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[37], immediateIndexed
dcl_constantbuffer cb1[163], immediateIndexed
dcl_constantbuffer cb2[12], immediateIndexed
dcl_constantbuffer cb3[6], immediateIndexed
dcl_constantbuffer cb4[1], immediateIndexed
dcl_constantbuffer cb5[59], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_sampler s10, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texturecube (float,float,float,float) t10
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v3.xy
dcl_input_ps linear v4.xy
dcl_input_ps_siv linear noperspective v5.xyz, position
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_temps 12
mul r0.xyz, v0.yzxy, v1.zxyz
mad r0.xyz, v1.yzxy, v0.zxyz, -r0.xyzx
mul r0.xyz, r0.xyzx, v1.wwww
mul r1.xyzw, v5.yyyy, cb1[41].xyzw
mad r1.xyzw, v5.xxxx, cb1[40].xyzw, r1.xyzw
mad r1.xyzw, v5.zzzz, cb1[42].xyzw, r1.xyzw
add r1.xyzw, r1.xyzw, cb1[43].xyzw
div r1.xyz, r1.xyzx, r1.wwww
add r2.xyz, r1.xyzx, -cb1[62].xyzx
dp3 r0.w, -r1.xyzx, -r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, -r1.xyzx
add r3.xy, v3.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
dp2 r4.x, cb5[1].xyxx, r3.xyxx
dp2 r4.y, cb5[2].xyxx, r3.xyxx
add r3.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mul r3.xy, r3.xyxx, cb5[3].xyxx
sample_b_indexable(texture2d)(float,float,float,float) r3.zw, r3.xyxx, t0.zwxy, s0, cb1[133].x
mad r4.xy, r3.zwzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r4.xyxx, r4.xyxx
add r0.w, -r0.w, l(1.000000)
max r0.w, r0.w, l(0.000000)
sqrt r4.z, r0.w
sample_b_indexable(texture2d)(float,float,float,float) r3.zw, v4.xyxx, t1.zwxy, s1, cb1[133].x
mad r5.xy, r3.zwzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r5.xyxx, r5.xyxx
add r0.w, -r0.w, l(1.000000)
max r0.w, r0.w, l(0.000000)
sqrt r5.z, r0.w
sample_b_indexable(texture2d)(float,float,float,float) r6.xyzw, v4.xyxx, t2.xyzw, s2, cb1[133].x
mul r0.w, r6.w, cb5[41].w
add r5.xyz, -r4.xyzx, r5.xyzx
mad r4.xyz, r0.wwww, r5.xyzx, r4.xyzx
mad r4.xyz, r4.xyzx, cb1[128].wwww, cb1[128].xyzx
dp3 r1.w, r4.xyzx, r4.xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, r4.xyzx
mul r0.xyz, r0.xyzx, r4.yyyy
mad r0.xyz, r4.xxxx, v0.xyzx, r0.xyzx
mad r0.xyz, r4.zzzz, v1.xyzx, r0.xyzx
dp3 r1.w, r0.xyzx, r0.xyzx
rsq r1.w, r1.w
mul r4.xyz, r0.xyzx, r1.wwww
add r0.xy, v5.xyxx, -cb1[121].xyxx
mov r5.x, l(0)
mul r5.y, cb1[132].z, l(0.020000)
mad r3.zw, r0.xxxy, cb1[122].zzzw, r5.xxxy
sample_b_indexable(texture2d)(float,float,float,float) r5.xyz, r3.zwzz, t3.xyzw, s3, cb1[133].x
add r5.xyz, r5.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mad_sat r5.xyz, cb5[42].xxxx, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
add r7.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r7.xyz, -cb5[8].xyzx, r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r5.xyz, r5.xyzx, cb5[9].xyzx
ge r8.xyz, cb5[42].yzwy, l(0.500000, 0.500000, 0.500000, 0.000000)
movc r5.xyz, r8.xyzx, r7.xyzx, r5.xyzx
mul r0.z, cb1[132].z, cb5[43].x
mul r0.z, r0.z, l(6.28318548)
sincos r0.z, null, r0.z
add r0.z, r0.z, l(1.000000)
mul r0.z, r0.z, l(0.500000)
mul r1.w, r0.z, cb5[43].y
mul r5.xyz, r1.wwww, r5.xyzx
dp3 r1.x, r4.xyzx, r1.xyzx
max r1.x, r1.x, l(0.000000)
add r1.x, -r1.x, l(1.000000)
log r1.x, |r1.x|
mul r1.y, r1.x, cb5[43].z
exp r1.y, r1.y
mad r1.y, r1.y, cb5[44].x, cb5[43].w
mul r1.yzw, r1.yyyy, r5.xxyz
mul r1.yzw, r1.yyzw, cb5[44].yyyy
add r5.xyz, cb3[5].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r5.xyz, cb5[44].zzzz, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul_sat r5.xyz, r5.xyzx, cb5[11].xyzx
mul r5.xyz, r5.xyzx, cb5[44].wwww
dp3 r2.w, cb5[13].xyzx, r4.xyzx
max r2.w, r2.w, l(0.000000)
log r2.w, r2.w
mul r2.w, r2.w, cb5[45].w
exp r2.w, r2.w
min r2.w, r2.w, l(1.000000)
mul r5.xyz, r2.wwww, r5.xyzx
mad r0.xy, r0.xyxx, cb1[122].zwzz, -cb5[14].xyxx
dp2 r0.x, r0.xyxx, r0.xyxx
sqrt r0.x, r0.x
div r0.x, r0.x, cb5[46].z
add r0.x, -r0.x, l(1.000000)
mul r0.y, r0.x, cb5[46].w
mul r0.y, r0.y, r0.y
mul r0.y, r0.y, l(1.44269514)
exp r0.y, r0.y
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
lt r2.w, l(0.000010), |r0.x|
ge r0.x, r0.x, l(0.000000)
add r0.y, -r0.y, l(1.000000)
mul r5.xyz, r0.yyyy, r5.xyzx
mul r5.xyz, r5.xyzx, cb5[47].xxxx
and r5.xyz, r0.xxxx, r5.xyzx
and r5.xyz, r2.wwww, r5.xyzx
add r0.x, cb1[132].z, cb5[48].z
mul r0.x, r0.x, l(3.14159274)
sincos r0.x, null, r0.x
add r0.x, r0.x, l(1.000000)
mad_sat r0.x, r0.x, l(0.500000), cb5[48].w
mul r0.y, r1.x, l(1.600000)
exp r0.y, r0.y
mad r0.y, r0.y, l(0.960000), l(0.040000)
mul r7.xyz, r0.yyyy, cb5[18].xyzx
mul r7.xyz, r0.xxxx, r7.xyzx
mul r7.xyz, r7.xyzx, cb5[49].yyyy
sample_b_indexable(texture2d)(float,float,float,float) r8.xyz, r3.xyxx, t4.xyzw, s4, cb1[133].x
mul r9.xyz, r8.xyzx, cb5[20].xyzx
mul r10.xyz, r9.xyzx, cb5[22].xyzx
mul r10.xyz, r10.xyzx, cb5[49].zzzz
sample_b_indexable(texture2d)(float,float,float,float) r0.y, v4.xyxx, t5.yxzw, s5, cb1[133].x
mul r0.y, r0.y, r6.w
mul r11.xyz, r0.yyyy, r6.xyzx
mul r11.xyz, r11.xyzx, cb5[24].xyzx
mad r11.xyz, r11.xyzx, cb5[49].wwww, -r10.xyzx
mad r10.xyz, r0.wwww, r11.xyzx, r10.xyzx
max r7.xyz, r7.xyzx, r10.xyzx
add r7.xyz, r7.xyzx, cb5[25].xyzx
max r5.xyz, r5.xyzx, r7.xyzx
max r1.xyz, r1.yzwy, r5.xyzx
add r1.xyz, r1.xyzx, cb5[26].xyzx
mad r5.xyz, -r8.xyzx, cb5[20].xyzx, r6.xyzx
mad r5.xyz, r0.wwww, r5.xyzx, r9.xyzx
mul r6.xyz, r0.xxxx, r5.xyzx
mul r6.xyz, r6.xyzx, cb5[49].yyyy
mad r5.xyz, r6.xyzx, l(-0.399999976, -0.399999976, -0.399999976, 0.000000), r5.xyzx
mul r6.xyz, r5.xyzx, cb5[50].wwww
mad r5.xyz, -cb5[50].wwww, r5.xyzx, cb5[28].xyzx
mad r5.xyz, cb5[51].xxxx, r5.xyzx, r6.xyzx
mul r5.xyz, r5.xyzx, cb5[31].xyzx
mul r0.xyz, r0.zzzz, r5.xyzx
mul r0.xyz, r0.xyzx, cb5[44].yyyy
mad_sat r5.xyz, r0.xyzx, l(-0.399999976, -0.399999976, -0.399999976, 0.000000), r5.xyzx
add r0.x, cb5[51].w, -cb5[52].x
mad_sat r0.x, r0.w, r0.x, cb5[52].x
add r0.y, -cb5[52].w, cb5[52].z
mad_sat r0.y, r0.w, r0.y, cb5[52].w
sample_b_indexable(texture2d)(float,float,float,float) r6.xyz, r3.xyxx, t6.xyzw, s6, cb1[133].x
max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r6.xyz, r6.xyzx
mul r6.xyz, r6.xyzx, cb5[56].wwww
exp r6.xyz, r6.xyzx
mul r7.xyz, r6.xyzx, cb5[33].xyzx
sample_b_indexable(texture2d)(float,float,float,float) r8.xyz, v4.xyxx, t7.xyzw, s7, cb1[133].x
mad r6.xyz, -r6.xyzx, cb5[33].xyzx, r8.xyzx
mad r6.xyz, r0.wwww, r6.xyzx, r7.xyzx
add r7.xyz, -r6.xyzx, cb5[28].xyzx
mad r6.xyz, cb5[51].xxxx, r7.xyzx, r6.xyzx
mul_sat o4.xyz, r6.xyzx, cb5[31].xyzx
sample_b_indexable(texture2d)(float,float,float,float) r0.z, r3.xyxx, t8.yzxw, s8, cb1[133].x
max r0.z, r0.z, l(0.000000)
log r0.z, r0.z
mul r0.z, r0.z, cb5[57].z
exp r0.z, r0.z
mul r1.w, r0.z, cb5[57].w
sample_b_indexable(texture2d)(float,float,float,float) r2.w, v4.xyxx, t9.yzwx, s9, cb1[133].x
mad r0.z, -r0.z, cb5[57].w, r2.w
mad_sat r5.w, r0.w, r0.z, r1.w
add r0.z, cb5[38].x, -cb5[39].x
mad o2.x, r0.w, r0.z, cb5[39].x
mad o2.z, r0.y, cb1[129].y, cb1[129].x
ftou r0.y, cb5[34].x
utof r0.y, r0.y
add r0.y, r0.y, l(0.500000)
mul o4.w, r0.y, l(0.142857149)
add r0.yzw, r2.xxyz, -cb1[59].xxyz
dp3 r0.y, r0.yzwy, r0.yzwy
sqrt r0.y, r0.y
add r0.y, r0.y, -cb4[0].x
add r0.z, -cb4[0].x, cb4[0].y
div_sat r0.y, r0.y, r0.z
add r0.z, cb4[0].z, l(-1.000000)
mad r0.y, r0.y, r0.z, l(1.000000)
mul o5.w, r0.y, cb5[58].w
mul r0.y, r0.x, cb1[127].w
mad r3.xyz, r5.xyzx, cb1[126].wwww, cb1[126].xyzx
mad r0.yzw, r0.yyyy, l(0.000000, 0.080000, 0.080000, 0.080000), cb1[127].xxyz
lt r6.xy, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[29].xyxx
dp3 r1.w, l(0.300000, 0.400000, 0.300000, 0.000000), cb1[155].xyzx
max r2.w, r1.w, cb0[36].y
add r1.w, r1.w, l(0.000100)
div r1.w, r2.w, r1.w
mad r7.xyz, cb1[155].xyzx, r1.wwww, -r2.wwww
mad r7.xyz, cb0[36].xxxx, r7.xyzx, r2.wwww
mov r4.w, l(1.000000)
dp4 r8.x, cb1[156].xyzw, r4.xyzw
dp4 r8.y, cb1[157].xyzw, r4.xyzw
dp4 r8.z, cb1[158].xyzw, r4.xyzw
mul r9.xyzw, r4.yzzx, r4.xyzz
dp4 r10.x, cb1[159].xyzw, r9.xyzw
dp4 r10.y, cb1[160].xyzw, r9.xyzw
dp4 r10.z, cb1[161].xyzw, r9.xyzw
mul r1.w, r4.y, r4.y
mad r1.w, r4.x, r4.x, -r1.w
add r8.xyz, r8.xyzx, r10.xyzx
mad r8.xyz, cb1[162].xyzx, r1.wwww, r8.xyzx
max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r8.xyz, r7.xyzx, r8.xyzx
mul r9.xyzw, r4.xyzw, l(-1.000000, -1.000000, -1.000000, 1.000000)
dp4 r11.x, cb1[156].xyzw, r9.xyzw
dp4 r11.y, cb1[157].xyzw, r9.xyzw
dp4 r11.z, cb1[158].xyzw, r9.xyzw
add r9.xyz, r10.xyzx, r11.xyzx
mad r9.xyz, cb1[162].xyzx, r1.wwww, r9.xyzx
max r9.xyz, r9.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r7.xyz, r7.xyzx, r9.xyzx
mad r7.xyz, r7.xyzx, r5.wwww, r8.xyzx
mul r7.xyz, r7.xyzx, cb0[29].xxxx
dp3 r1.w, l(0.200000, 0.700000, 0.100000, 0.000000), r5.xyzx
mul_sat r2.w, cb0[28].w, l(0.0666666701)
mad r2.w, r2.w, l(-9.000000), l(10.000000)
add r3.w, -r2.w, l(1.000000)
mad r1.w, r1.w, r3.w, r2.w
mul r7.xyz, r7.xyzx, r1.wwww
and r7.xyz, r6.xxxx, r7.xyzx
and r6.xzw, r6.xxxx, r8.xxyz
if_nz r6.y
  sample_indexable(texturecube)(float,float,float,float) r8.xyz, r4.xyzx, t10.xyzw, s10
  mul r8.xyz, r8.xyzx, cb0[29].yyyy
  mad r7.xyz, r8.xyzx, r3.xyzx, r7.xyzx
endif
mul r6.xyz, r3.xyzx, r6.xzwx
mad r0.yzw, r0.yyzw, l(0.000000, 0.450000, 0.450000, 0.450000), r3.xxyz
add r0.yzw, -r7.xxyz, r0.yyzw
mad r0.yzw, cb1[134].zzzz, r0.yyzw, r7.xxyz
max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r1.w, l(0.000000), cb1[130].x
if_nz r1.w
  add r3.xyz, r2.xyzx, -cb2[8].xyzx
  add r7.xyz, cb2[9].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r3.xyz, r7.xyzx, |r3.xyzx|
  or r1.w, r3.y, r3.x
  or r1.w, r3.z, r1.w
  dp3 r2.x, r2.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r2.x, r2.x, l(0.002000)
  frc r2.x, r2.x
  lt r2.x, l(0.500000), r2.x
  movc r2.xyz, r2.xxxx, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  movc r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
endif
mad o0.xyz, r6.xyzx, r5.wwww, r0.yzwy
mad o1.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mov o0.w, l(0)
mov o1.w, cb2[11].x
mov o2.w, l(0.552941203)
mov o2.y, r0.x
mov o3.xyzw, r5.xyzw
mov o5.xyz, l(0,0.552941203,1.000000,0)
mov o6.xyz, r1.xyzx
mov o6.w, l(0)
ret
// Approximately 0 instruction slots used

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
